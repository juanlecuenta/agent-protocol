/*
 * Agent Protocol
 * Specification of the API protocol for communication with an agent.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package agentprotocol.micronaut.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.stream.Collectors;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;
import io.micronaut.core.annotation.Introspected;
import agentprotocol.micronaut.invoker.annotation.HardNullable;
import jakarta.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * An Artifact either created by or submitted to the agent.
 */
@Schema(name = "Artifact", description = "An Artifact either created by or submitted to the agent.")
@Serdeable
@JsonPropertyOrder({
    Artifact.JSON_PROPERTY_ARTIFACT_ID,
    Artifact.JSON_PROPERTY_AGENT_CREATED,
    Artifact.JSON_PROPERTY_FILE_NAME,
    Artifact.JSON_PROPERTY_RELATIVE_PATH
})
@Generated(value = "io.micronaut.openapi.generator.JavaMicronautServerCodegen")
@Introspected
public class Artifact {

    public static final String JSON_PROPERTY_ARTIFACT_ID = "artifact_id";
    public static final String JSON_PROPERTY_AGENT_CREATED = "agent_created";
    public static final String JSON_PROPERTY_FILE_NAME = "file_name";
    public static final String JSON_PROPERTY_RELATIVE_PATH = "relative_path";

    /**
     * ID of the artifact.
     */
    @NotNull
    @Schema(name = "artifact_id", example = "b225e278-8b4c-4f99-a696-8facf19f0e56", description = "ID of the artifact.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ARTIFACT_ID)
    private String artifactId;

    /**
     * Whether the artifact has been created by the agent.
     */
    @NotNull
    @Schema(name = "agent_created", example = "false", description = "Whether the artifact has been created by the agent.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_AGENT_CREATED)
    private Boolean agentCreated;

    /**
     * Filename of the artifact.
     */
    @NotNull
    @Schema(name = "file_name", example = "main.py", description = "Filename of the artifact.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_FILE_NAME)
    private String fileName;

    /**
     * Relative path of the artifact in the agent&#39;s workspace.
     */
    @HardNullable
    @Schema(name = "relative_path", example = "python/code/", description = "Relative path of the artifact in the agent's workspace.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RELATIVE_PATH)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String relativePath;

    public Artifact(String artifactId, Boolean agentCreated, String fileName) {
        this.artifactId = artifactId;
        this.agentCreated = agentCreated;
        this.fileName = fileName;
    }

    /**
     * ID of the artifact.
     * @return the artifactId property value
     */
    public String getArtifactId() {
        return artifactId;
    }

    /**
     * Set the artifactId property value
     */
    public void setArtifactId(String artifactId) {
        this.artifactId = artifactId;
    }

    /**
     * Set artifactId in a chainable fashion.
     * @return The same instance of Artifact for chaining.
     */
    public Artifact artifactId(String artifactId) {
        this.artifactId = artifactId;
        return this;
    }

    /**
     * Whether the artifact has been created by the agent.
     * @return the agentCreated property value
     */
    public Boolean getAgentCreated() {
        return agentCreated;
    }

    /**
     * Set the agentCreated property value
     */
    public void setAgentCreated(Boolean agentCreated) {
        this.agentCreated = agentCreated;
    }

    /**
     * Set agentCreated in a chainable fashion.
     * @return The same instance of Artifact for chaining.
     */
    public Artifact agentCreated(Boolean agentCreated) {
        this.agentCreated = agentCreated;
        return this;
    }

    /**
     * Filename of the artifact.
     * @return the fileName property value
     */
    public String getFileName() {
        return fileName;
    }

    /**
     * Set the fileName property value
     */
    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    /**
     * Set fileName in a chainable fashion.
     * @return The same instance of Artifact for chaining.
     */
    public Artifact fileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * Relative path of the artifact in the agent&#39;s workspace.
     * @return the relativePath property value
     */
    public String getRelativePath() {
        return relativePath;
    }

    /**
     * Set the relativePath property value
     */
    public void setRelativePath(String relativePath) {
        this.relativePath = relativePath;
    }

    /**
     * Set relativePath in a chainable fashion.
     * @return The same instance of Artifact for chaining.
     */
    public Artifact relativePath(String relativePath) {
        this.relativePath = relativePath;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Artifact artifact = (Artifact) o;
        return Objects.equals(this.artifactId, artifact.artifactId) &&
            Objects.equals(this.agentCreated, artifact.agentCreated) &&
            Objects.equals(this.fileName, artifact.fileName) &&
            Objects.equals(this.relativePath, artifact.relativePath);
    }

    @Override
    public int hashCode() {
        return Objects.hash(artifactId, agentCreated, fileName, relativePath);
    }

    @Override
    public String toString() {
        return "Artifact("
            + "artifactId: " + getArtifactId() + ", "
            + "agentCreated: " + getAgentCreated() + ", "
            + "fileName: " + getFileName() + ", "
            + "relativePath: " + getRelativePath()
            + ")";
    }

}